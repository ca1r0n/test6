module.exports = {
    env: {
        browser: true,
        es2021: true,
    },
    extends: [
        'eslint:recommended',
        'plugin:react/recommended',
        'plugin:import/recommended',
        // the following lines do the trick
        'plugin:import/typescript',
        'plugin:jsx-a11y/recommended',
        'plugin:security/recommended',
        'plugin:@typescript-eslint/recommended',
        // This disables the formatting rules in ESLint that Prettier is going to be responsible for handling.
        // Make sure it's always the last config, so it gets the chance to override other configs.
        'eslint-config-prettier',
        // 'prettier',
    ],
    settings: {
        'react': {
            // Tells eslint-plugin-react to automatically detect the version of React to use.
            version: 'detect',
        },
        // Tells eslint how to resolve imports
        'import/resolver': {
            typescript: {
                "alwaysTryTypes": true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
            },
            node: {
                paths: ['src'],
                extensions: ['.js', '.jsx', '.ts', '.tsx'],
            },
        },
    },
    overrides: [],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module',
    },
    plugins: ['react', '@typescript-eslint', 'prettier'],
    rules: {
        '@typescript-eslint/explicit-member-accessibility': ['error'],
        '@typescript-eslint/quotes': 0,
        '@typescript-eslint/brace-style': 'off',
        '@typescript-eslint/func-call-spacing': 'off',
        '@typescript-eslint/indent': 'off',
        '@typescript-eslint/member-delimiter-style': 'off',
        '@typescript-eslint/no-extra-parens': 'off',
        '@typescript-eslint/semi': 'off',
        '@typescript-eslint/space-before-function-paren': 'off',
        '@typescript-eslint/type-annotation-spacing': 'off',
        'react/jsx-child-element-spacing': 'off',
        'react/jsx-closing-bracket-location': 'off',
        'react/jsx-closing-tag-location': 'off',
        'react/jsx-curly-newline': 'off',
        'react/jsx-curly-spacing': 'off',
        'react/jsx-equals-spacing': 'off',
        'react/jsx-first-prop-new-line': 'off',
        'react/jsx-indent': 'off',
        'react/jsx-indent-props': 'off',
        'react/jsx-max-props-per-line': 'off',
        'react/jsx-one-expression-per-line': 'off',
        'react/jsx-props-no-multi-spaces': 'off',
        'react/jsx-tag-spacing': 'off',
        'react/jsx-wrap-multilines': 'off',
        'react/react-in-jsx-scope': 'off',
        // The following rules can be used in some cases. See the README for more
        // information. (These are marked with `0` instead of `"off"` so that a
        // script can distinguish them.)
        'arrow-body-style': 0,
        'curly': 0,
        'lines-around-comment': 0,
        'max-len': 0,
        'no-confusing-arrow': 0,
        'no-mixed-operators': 0,
        'no-tabs': 0,
        'no-unexpected-multiline': 0,
        'prefer-arrow-callback': 0,
        'quotes': 0,
        // The rest are rules that you never need to enable when using Prettier.
        'array-bracket-newline': 'off',
        'array-bracket-spacing': 'off',
        'array-element-newline': 'off',
        'arrow-parens': 'off',
        'arrow-spacing': 'off',
        'block-spacing': 'off',
        'brace-style': 'off',
        'comma-dangle': 'off',
        'comma-spacing': 'off',
        'comma-style': 'off',
        'computed-property-spacing': 'off',
        'dot-location': 'off',
        'eol-last': 'off',
        'func-call-spacing': 'off',
        'function-call-argument-newline': 'off',
        'function-paren-newline': 'off',
        'generator-star': 'off',
        'generator-star-spacing': 'off',
        'implicit-arrow-linebreak': 'off',
        'indent': 'off',
        'jsx-quotes': 'off',
        'key-spacing': 'off',
        'keyword-spacing': 'off',
        'linebreak-style': 'off',
        'multiline-ternary': 'off',
        'newline-per-chained-call': 'off',
        'new-parens': 'off',
        'no-arrow-condition': 'off',
        'no-comma-dangle': 'off',
        'no-extra-parens': 'off',
        'no-extra-semi': 'off',
        'no-floating-decimal': 'off',
        'no-mixed-spaces-and-tabs': 'off',
        'no-multi-spaces': 'off',
        'no-multiple-empty-lines': 'off',
        'no-reserved-keys': 'off',
        'no-space-before-semi': 'off',
        'no-trailing-spaces': 'off',
        'no-whitespace-before-property': 'off',
        'no-wrap-func': 'off',
        'nonblock-statement-body-position': 'off',
        'object-curly-newline': 'off',
        'object-curly-spacing': 'off',
        'object-property-newline': 'off',
        'one-var-declaration-per-line': 'off',
        'operator-linebreak': 'off',
        'padded-blocks': 'off',
        'quote-props': 'off',
        'rest-spread-spacing': 'off',
        'semi': 'off',
        'semi-spacing': 'off',
        'semi-style': 'off',
        'space-after-function-name': 'off',
        'space-after-keywords': 'off',
        'space-before-blocks': 'off',
        'space-before-function-paren': 'off',
        'space-before-function-parentheses': 'off',
        'space-before-keywords': 'off',
        'space-in-brackets': 'off',
        'space-in-parens': 'off',
        'space-infix-ops': 'off',
        'space-return-throw-case': 'off',
        'space-unary-ops': 'off',
        'space-unary-word-ops': 'off',
        'switch-colon-spacing': 'off',
        'template-curly-spacing': 'off',
        'template-tag-spacing': 'off',
        'unicode-bom': 'off',
        'wrap-iife': 'off',
        'wrap-regex': 'off',
        'yield-star-spacing': 'off',

        'react/prop-types': 0,
        'prettier/prettier': 'error',
    },
    ignorePatterns: ['node_modules', 'build', "*.config.js"],
};
